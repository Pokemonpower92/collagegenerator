# Build stage
FROM golang:1.23-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build both binaries with optimizations
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s" -o /app/bin/collageapi ./cmd/collageapi
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s" -o /app/bin/migrate ./cmd/migrate

# Final stage
FROM alpine:3.19

# Install runtime dependencies
RUN apk add --no-cache ca-certificates tzdata

# Create non-root user
RUN adduser -D -g '' appuser

# Set working directory
WORKDIR /app

# Create store directory
RUN mkdir -p /data/store && chown -R appuser:appuser /data

# Copy binaries from builder
COPY --from=builder /app/bin/collageapi /app/bin/collageapi
COPY --from=builder /app/bin/migrate /app/bin/migrate

# Copy migrations
COPY --from=builder /app/internal/sqlc/migrations /app/internal/sqlc/migrations

# Set ownership
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Default command (can be overridden)
CMD ["/app/bin/collageapi"]